<control:VirtualKeyboard
    x:Class="VsVirtualKeyboard.UI.VsVirtualKeyboardUI"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:control="clr-namespace:VsVirtualKeyboard.Control"
    xmlns:converter="clr-namespace:VsVirtualKeyboard.Converter"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:VsVirtualKeyboard.UI"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <control:VirtualKeyboard.Resources>
        <SolidColorBrush x:Key="ButtonNormalBackground" Color="#F1685E" />
        <SolidColorBrush x:Key="ButtonPressedBackground" Color="#F59584" />

        <Style TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="1" />
            <Setter Property="Foreground" Value="#FFFFFF" />
            <Setter Property="FontSize" Value="22" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="ClickMode" Value="Press" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Margin="1"
                            Padding="1,0"
                            Background="{StaticResource ButtonNormalBackground}"
                            CornerRadius="3"
                            SnapsToDevicePixels="True">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonPressedBackground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="control:Key">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Margin="1"
                            Padding="1,0"
                            Background="{StaticResource ButtonNormalBackground}"
                            CornerRadius="3"
                            SnapsToDevicePixels="True">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonPressedBackground}" />
                            </Trigger>
                            <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonPressedBackground}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Background" Value="White" />
            <Setter Property="Height" Value="100" />
            <Setter Property="FontSize" Value="32" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="Focusable" Value="True" />
            <Setter Property="MaxWidth" Value="{Binding ActualWidth, ElementName=KeyboardLayoutRoot}" />
        </Style>

        <Style x:Key="MsgTextBox" TargetType="TextBox">
            <Setter Property="Background" Value="White" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="MaxWidth" Value="{Binding ActualWidth, ElementName=KeyboardLayoutRoot}" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>

        <DataTemplate x:Key="DefaultKeyboardLayout">
            <local:FullKeyboardLayout />
        </DataTemplate>

        <DataTemplate x:Key="NumericKeyboardLayout">
            <local:NumericKeyboardLayout />
        </DataTemplate>

        <converter:KeyboardLayoutSelectorConverter
            x:Key="KeyboardLayoutSelectorConverter"
            DefaultTemplate="{StaticResource DefaultKeyboardLayout}"
            NumPadTemplate="{StaticResource NumericKeyboardLayout}" />
    </control:VirtualKeyboard.Resources>


    <Border
        Padding="0"
        Background="Black"
        BorderBrush="Gray"
        BorderThickness="4"
        CornerRadius="16"
        SnapsToDevicePixels="True">
        <Grid Margin="16">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="12" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid Background="White">
                <Grid.RowDefinitions>
                    <RowDefinition Height="92" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBox x:Name="VkbTextBox" Text="{Binding Value, RelativeSource={RelativeSource AncestorType=local:VsVirtualKeyboardUI}, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
                <PasswordBox
                    x:Name="VkbPasswordBox"
                    Padding="12,0"
                    VerticalContentAlignment="Center"
                    FontSize="32"
                    Visibility="Collapsed" />

                <Border
                    x:Name="BottomLabelContainer"
                    Grid.Row="1"
                    Padding="8"
                    BorderBrush="Black"
                    BorderThickness="0,1,0,0">
                    <Grid>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock
                                x:Name="MinTbl"
                                FontSize="20"
                                Text="{Binding Minimum, RelativeSource={RelativeSource AncestorType=local:VsVirtualKeyboardUI}, StringFormat={}Min:{0}}" />
                            <TextBlock
                                x:Name="MaxTbl"
                                Margin="24,0,24,0"
                                FontSize="20"
                                Text="{Binding Maximum, RelativeSource={RelativeSource AncestorType=local:VsVirtualKeyboardUI}, StringFormat={}Max:{0}}" />
                            <TextBox
                                x:Name="MsgTbl"
                                IsReadOnly="True"
                                Style="{StaticResource MsgTextBox}"
                                Text="" />
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>

            <Grid x:Name="KeyboardLayoutRoot" Grid.Row="2">
                <ContentControl Content="{Binding Layout, RelativeSource={RelativeSource AncestorType=control:VirtualKeyboard}}" ContentTemplate="{Binding Layout, RelativeSource={RelativeSource AncestorType=control:VirtualKeyboard}, Converter={StaticResource KeyboardLayoutSelectorConverter}}" />
            </Grid>
        </Grid>
    </Border>
</control:VirtualKeyboard>
